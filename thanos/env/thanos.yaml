app:
  project: cpaas-monitoring
  environment: "thanos"
  name: "thanos"

metrics:
  enabled: true
  serviceMonitor:
    enabled: true
    namespace: "monitoring"
    labels: 
      release: "kube-prometheus-stack"

objstoreConfig: |-
  type: AZURE
  config:
    storage_account: ''
    storage_account_key: ''
    container: ''
storegateway:
  enabled: true # Set to true to enable the Store Gateway
  replicaCount: 2
  persistence:
    size: 20Gi
  # resourcesPreset: "2xlarge"
  resources:
    requests:
      cpu: 2
      ephemeral-storage: 50Mi
      memory: 4Gi
    limits:
      cpu: 4
      ephemeral-storage: 1Gi
      memory: 10Gi
  sharded:
    enabled: false
  readinessProbe:
    timeoutSeconds: 60
compactor:
  enabled: true
  resourcesPreset: "large"
  persistence:
    size: 20Gi
  retentionResolutionRaw: 60d
  retentionResolution5m: 90d
  retentionResolution1h: 90d
bucketweb:
  enabled: true
  resourcesPreset: "medium"
query:
  extraFlags:
    - --query.auto-downsampling
  stores: # Here you can add all of the cluster we'll be monitoring. The ip is the kube-prometheus-stack-thanos-external's external-ip
    - 0.0.0.0:10901 # dev-reg
  replicaLabel: prometheus_replica
  dnsDiscovery:
    enabled: true
    sidecarsService: "kube-prometheus-stack-thanos-discovery"
    sidecarsNamespace: "monitoring"
  # Resources - increase if needed.
  # resourcesPreset: "xlarge"
  resources:
    requests:
      cpu: 2
      ephemeral-storage: 50Mi
      memory: 4Gi
    limits:
      cpu: 4
      ephemeral-storage: 1Gi
      memory: 10Gi
  replicaCount: 2

queryFrontend:
  resourcesPreset: "xlarge"
  service:
    type: NodePort

ruler:
  enabled: true
  alertmanagers:
    - http://kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093
  existingConfigmap: "thanos-ruler-config"
  resourcesPreset: "large"
  service:
    type: NodePort
